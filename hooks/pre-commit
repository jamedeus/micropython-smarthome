#!/bin/sh

# Pre-commit actions:
# - Check if firmware source files in the commit use incorrect syntax
#   to import the app_context module, print error and abort if they do
#
# - Check if JSX src files are part of the commit and automatically
#   update static cache version (forces PWA clients to refresh
#   cache and download new version)
#
# - Check if desktop_integration files are part of commit, update
#   micropython-smarthome-integration.zip (downloadable from
#   overview page in django frontend)


# Prevent committing firmware code with wrong app_context import syntax
directories="core devices sensors lib tests/firmware"
# shellcheck disable=2086
if git diff --cached -- $directories | grep -q 'from app_context import'; then
  printf "%s\nERROR: %s" "$(tput setaf 1)" "$(tput init)"
  printf 'Commit contains dangerous %sfrom app_context import *%s syntax\n' "$(tput setaf 1)" "$(tput init)"
  printf 'This creates a local variable that wont stay in sync with other modules\n'
  printf 'Replace this with %simport app_context%s and try again\n\n' "$(tput setaf 2)" "$(tput init)"
  exit 1
fi


# Skip if not on master branch
if [ "$(git branch --show-current)" != "master" ]; then
    exit
fi

# Check if JSX files are included in commit
JSX_FILES=$(git diff --cached --name-only --diff-filter=d | grep -E "^(frontend/src/)")

# Check if desktop integration files are included in commit
DESKTOP_INTEGRATION=$(git diff --cached --name-only --diff-filter=d | grep -E "^(desktop_integration/)")


if [ -n "$JSX_FILES" ]; then
    # Get short hash of last commit (used as PWA version number)
    COMMIT_HASH=$(git rev-parse --short HEAD)

    # Overwrite old staticCacheName to force client cache refresh
    sed -i -E "s/^const staticCacheName.*$/const staticCacheName = 'django-pwa-v${COMMIT_HASH}';/" frontend/webapp/static/webapp/serviceworker.js

    # Commit new static cache version
    git add frontend/webapp/static/webapp/serviceworker.js
fi


if [ -n "$DESKTOP_INTEGRATION" ]; then
    # Zip current contents of desktop_integration, overwrite old bundle in static dir
    zip -r frontend/node_configuration/static/node_configuration/micropython-smarthome-integration.zip desktop_integration/

    # Commit new desktop_integration bundle, pipeline will build into new docker images
    git add frontend/node_configuration/static/node_configuration/micropython-smarthome-integration.zip
fi
