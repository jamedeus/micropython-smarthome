# Dependency: https://github.com/peterhinch/micropython_ir

# IR LED Circuit:
# Components:
#   - IR LED
#   - PN2222 Transistor
#   - 2x 100 Ohm resistor
#
# Wiring:
#   - 3.3v -> 100 Ohm resistor -> LED+
#   - GND -> Transistor Collector
#   - Control pin -> 100 Ohm resistor -> Transistor Base
#   - Transistor Emitter -> LED-

from ir_tx import Player
from machine import Pin
import time



codes = {
    "power" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 545],

    "vol_up" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 545],

    "vol_down" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 545],

    "mute" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 545],

    "up" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 545],

    "down" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 545],

    "left" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 545],

    "right" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 1687, 545],

    "enter" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 1687, 545],

    "settings" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 545],

    "exit" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 1687, 547, 1687, 545],

    "source" : [4500, 4500, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 567, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 547, 1687, 545]
}



class Samsung():
    def __init__(self, pin):
        led = Pin(pin, Pin.OUT, value = 0)
        self.ir = Player(led)



    def send(self, key):
        self.ir.play(codes[key])



    def backlight(self, state):
        self.send("settings")
        time.sleep(2)
        self.send("right")
        time.sleep_ms(500)
        self.send("down")
        time.sleep_ms(500)
        self.send("enter")
        time.sleep_ms(500)

        ct = 1

        if state == "on":
            direction = "right"
        else:
            direction = "left"

        while ct < 15:
            self.send(direction)
            time.sleep_ms(150)
            ct += 1

        self.send("exit")
