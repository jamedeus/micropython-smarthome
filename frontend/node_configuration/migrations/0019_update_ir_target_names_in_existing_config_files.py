# Generated by Django 4.2.15 on 2024-08-23 06:54

from django.db import migrations


def fix_api_target_rule(rule):
    '''Takes api-target rule dict with "on" and "off" keys.
    Updates IR target names in sub rules and returns.
    '''
    rule['on'] = fix_api_target_sub_rule(rule['on'])
    rule['off'] = fix_api_target_sub_rule(rule['off'])
    return rule


def fix_api_target_sub_rule(sub_rule):
    '''Takes api-target rule dict on or off action (list of params).
    If rule contains IR target name update to new syntax and return.
    '''
    if sub_rule[0] == 'ir_key':
        if sub_rule[1] == 'ac':
            sub_rule[1] = 'whynter_ac'
        elif sub_rule[1] == 'tv':
            sub_rule[1] = 'samsung_tv'
    return sub_rule


def rename_ir_target_names(apps, schema_editor):
    '''Renames IR Blaster targets in existing config files (ir_blaster targets
    list, api-target rule objects) to new syntax introduced in dcc3a9a4.
    tv -> samsung_tv
    ac -> whynter_ac

    Also removes duplicate targets if any (old bug) and removes ir macros
    section if still present (no longer supported)
    '''
    Config = apps.get_model('node_configuration', 'Config')
    for config in Config.objects.all():
        if 'ir_blaster' in config.config:
            # Remove duplicate targets if any (a bug many versions ago caused
            # config editor to add duplicates, never fixed with migration)
            config.config['ir_blaster']['target'] = list(
                set(config.config['ir_blaster']['target'])
            )

            # Rename ac -> whynter_ac
            if 'ac' in config.config['ir_blaster']['target']:
                config.config['ir_blaster']['target'].remove('ac')
                config.config['ir_blaster']['target'].append('whynter_ac')

            # Rename tv -> samsung_tv
            if 'tv' in config.config['ir_blaster']['target']:
                config.config['ir_blaster']['target'].remove('tv')
                config.config['ir_blaster']['target'].append('samsung_tv')

            # Remove macros key if still present (unsupported after 884d2a64)
            if 'macros' in config.config['ir_blaster']:
                del config.config['ir_blaster']['macros']

        # Check for api-target devices with ir_key rules
        for device in (i for i in config.config if i.startswith('device')):
            if config.config[device]['_type'] == 'api-target':
                # Update target names in default_rule
                config.config[device]['default_rule'] = fix_api_target_rule(
                    config.config[device]['default_rule']
                )

                # Update target names in schedule rules
                for rule in config.config[device]['schedule']:
                    config.config[device]['schedule'][rule] = fix_api_target_rule(
                        config.config[device]['schedule'][rule]
                    )

        # Write changes to database
        config.save()


class Migration(migrations.Migration):

    dependencies = [
        ('node_configuration', '0018_remove_wifi_credentials_from_configs'),
    ]

    operations = [
        migrations.RunPython(rename_ir_target_names)
    ]
