# Generated by Django 4.2 on 2023-05-26 09:46

import json
from django.db import migrations
from django.conf import settings


def fix_config_type(apps, schema_editor):
    Config = apps.get_model('node_configuration', 'Config')
    for config in Config.objects.all():
        # Replace all "type" attributes with "_type"
        for i in config.config:
            if not i.startswith('device') and not i.startswith('sensor'): continue
            config.config[i]['_type'] = config.config[i]['type']
            del config.config[i]['type']
        config.save()


def fix_config_pwm_limits(apps, schema_editor):
    Config = apps.get_model('node_configuration', 'Config')
    for config in Config.objects.all():
        # Replace all "type" attributes with "_type"
        for i in config.config:
            if not i.startswith('device'): continue
            if not config.config[i]['_type'] == 'pwm': continue

            config.config[i]['min_bright'] = config.config[i]['min']
            config.config[i]['max_bright'] = config.config[i]['max']
            del config.config[i]['min']
            del config.config[i]['max']
        config.save()


def update_config_on_disk(apps, scheda_editor):
    Config = apps.get_model('node_configuration', 'Config')
    for config in Config.objects.all():
        with open(settings.CONFIG_DIR + config.filename, 'w') as file:
            json.dump(config.config, file)


class Migration(migrations.Migration):
    dependencies = [
        ("node_configuration", "0009_auto_pre_populate_sunrise_sunset_keywords"),
    ]

    operations = [
        migrations.RunPython(fix_config_type),
        migrations.RunPython(fix_config_pwm_limits),
        migrations.RunPython(update_config_on_disk)
    ]
