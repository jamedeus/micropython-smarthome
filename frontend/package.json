{
  "name": "micropython-smarthome-frontend",
  "version": "1.0.0",
  "description": "Django PWA for configuring and controlling micropython-smarthome nodes",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/jamedeus/micropython-smarthome.git"
  },
  "keywords": [
    "micropython",
    "python",
    "esp32",
    "iot",
    "home",
    "automation",
    "scheduling",
    "pwa",
    "webapp",
    "django"
  ],
  "author": "Josh Medeiros",
  "bugs": {
    "url": "https://gitlab.com/jamedeus/micropython-smarthome/issues"
  },
  "homepage": "https://gitlab.com/jamedeus/micropython-smarthome#readme",
  "dependencies": {
    "bootstrap": "^5.2.3",
    "bootstrap-icons": "^1.10.4",
    "chart.js": "^4.4.3",
    "chartjs-adapter-date-fns": "^3.0.0",
    "jquery": "^3.6.4",
    "js-cookie": "^3.0.5",
    "rangeslider.js": "^2.3.3",
    "react": "^18.2.0",
    "react-bootstrap": "^2.9.1",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "^18.2.0",
    "react-range": "^1.8.14",
    "react-transition-group": "^4.4.5",
    "spinkit": "^2.0.1",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@babel/core": "^7.23.3",
    "@babel/preset-env": "^7.23.3",
    "@babel/preset-react": "^7.23.3",
    "@testing-library/jest-dom": "^6.4.6",
    "@testing-library/react": "^16.0.0",
    "@testing-library/user-event": "^14.5.2",
    "@webpack-cli/generators": "^3.0.7",
    "babel-loader": "^9.1.3",
    "css-loader": "^6.8.1",
    "eslint": "^8.54.0",
    "eslint-plugin-jest": "^28.6.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.7.0",
    "jest-css-modules-transform": "^4.4.2",
    "jest-environment-jsdom": "^29.7.0",
    "sass": "^1.77.8",
    "sass-loader": "^13.3.2",
    "style-loader": "^3.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1"
  },
  "scripts": {
    "test": "jest",
    "build": "webpack --mode=production --node-env=production",
    "build:dev": "webpack --mode=development",
    "build:prod": "webpack --mode=production --node-env=production",
    "watch": "webpack --watch"
  }
}
