# Partial device/sensor metadata used to set rule inputs, limits, etc
# Generated by api.views.get_metadata_map function
instance_metadata = {
    "devices": {
        "mosfet": {
            "rule_prompt": "standard"
        },
        "http-get": {
            "rule_prompt": "standard"
        },
        "pwm": {
            "rule_prompt": "int_or_fade",
            "rule_limits": [
                0,
                1023
            ]
        },
        "desktop": {
            "rule_prompt": "standard"
        },
        "tasmota-relay": {
            "rule_prompt": "standard"
        },
        "dimmer": {
            "rule_prompt": "int_or_fade",
            "rule_limits": [
                1,
                100
            ]
        },
        "api-target": {
            "rule_prompt": "api_target"
        },
        "dumb-relay": {
            "rule_prompt": "standard"
        },
        "bulb": {
            "rule_prompt": "int_or_fade",
            "rule_limits": [
                1,
                100
            ]
        },
        "wled": {
            "rule_prompt": "int_or_fade",
            "rule_limits": [
                1,
                255
            ]
        }
    },
    "sensors": {
        "switch": {
            "rule_prompt": "standard",
            "triggerable": False
        },
        "dht22": {
            "rule_prompt": "thermostat",
            "rule_limits": [
                18,
                27
            ],
            "triggerable": False
        },
        "si7021": {
            "rule_prompt": "thermostat",
            "rule_limits": [
                18,
                27
            ],
            "triggerable": False
        },
        "desktop": {
            "rule_prompt": "standard",
            "triggerable": True
        },
        "pir": {
            "rule_prompt": "float_range",
            "rule_limits": [
                0,
                60
            ],
            "triggerable": True
        },
        "ld2410": {
            "rule_prompt": "float_range",
            "rule_limits": [
                0,
                60
            ],
            "triggerable": True
        },
        "load-cell": {
            "rule_prompt": "float_range",
            "rule_limits": [
                0,
                10000000
            ],
            "triggerable": False
        },
        "dummy": {
            "rule_prompt": "on_off",
            "triggerable": True
        }
    }
}


# Expected get_status response for test config 1
config1_status = {
    'metadata': {
        'id': 'Test1',
        'floor': '1',
        'location': 'Inside cabinet above microwave',
        'ir_blaster': False,
        "schedule_keywords": {
            "sunrise": "06:00",
            "sunset": "18:00"
        }
    },
    'sensors': {
        'sensor1': {
            'current_rule': 2.0,
            'default_rule': 2.0,
            'enabled': True,
            'type': 'pir',
            'targets': [
                'device1',
                'device2'
            ],
            'schedule': {
                '10:00': '2',
                '22:00': '2'
            },
            'scheduled_rule': 2.0,
            'nickname': 'Motion Sensor',
            'condition_met': True
        }
    },
    'devices': {
        'device1': {
            'current_rule': 'disabled',
            'default_rule': 512,
            'enabled': False,
            'type': 'pwm',
            'schedule': {
                '00:00': 'fade/32/7200',
                '05:00': 'Disabled',
                '22:01': 'fade/256/7140',
                '22:00': '1023'
            },
            'scheduled_rule': 'disabled',
            'nickname': 'Cabinet Lights',
            'turned_on': True,
            'max_rule': 1023,
            'min_rule': 0
        },
        'device2': {
            'current_rule': 'enabled',
            'default_rule': 'enabled',
            'enabled': True,
            'type': 'tasmota-relay',
            'schedule': {
                '05:00': 'enabled',
                '22:00': 'disabled'
            },
            'scheduled_rule': 'enabled',
            'nickname': 'Overhead Lights',
            'turned_on': True
        }
    }
}


# Expected get_status response for test config 2
config2_status = {
    'metadata': {
        'id': 'Test2',
        'floor': '2',
        'location': 'Bedroom',
        'ir_blaster': True,
        'ir_targets': [
            'samsung_tv',
            'whynter_ac'
        ],
        "schedule_keywords": {
            "sunrise": "06:00",
            "sunset": "18:00"
        }
    },
    'sensors': {
        'sensor1': {
            'humid': -6,
            'scheduled_rule': 74,
            'enabled': True,
            'targets': [
                'device1',
                'device2'
            ],
            'nickname': 'Thermostat',
            'condition_met': False,
            'schedule': {},
            'current_rule': 74,
            'default_rule': 74,
            'temp': -52.32999,
            'type': 'si7021',
            'units': 'fahrenheit'
        }
    },
    'devices': {
        'device1': {
            'current_rule': {
                'on': [
                    'ir_key',
                    'whynter_ac',
                    'start'
                ],
                'off': [
                    'ir_key',
                    'whynter_ac',
                    'stop'
                ]
            },
            'default_rule': {
                'on': [
                    'ir_key',
                    'whynter_ac',
                    'start'
                ],
                'off': [
                    'ir_key',
                    'whynter_ac',
                    'stop'
                ]
            },
            'enabled': True,
            'type': 'api-target',
            'schedule': {
                '10:00': {
                    'on': [
                        'ir_key',
                        'whynter_ac',
                        'start'
                    ],
                    'off': [
                        'ir_key',
                        'whynter_ac',
                        'stop'
                    ]
                },
                '00:00': {
                    'on': [
                        'ir_key',
                        'whynter_ac',
                        'stop'
                    ],
                    'off': [
                        'ir_key',
                        'whynter_ac',
                        'stop'
                    ]
                }
            },
            'scheduled_rule': {
                'on': [
                    'ir_key',
                    'whynter_ac',
                    'start'
                ],
                'off': [
                    'ir_key',
                    'whynter_ac',
                    'stop'
                ]
            },
            'nickname': 'Air Conditioner',
            'turned_on': False
        },
        'device2': {
            'current_rule': {
                'on': [
                    'device1',
                    'turn_on'
                ],
                'off': [
                    'device1',
                    'turn_off'
                ]
            },
            'default_rule': {
                'on': [
                    'device1',
                    'turn_on'
                ],
                'off': [
                    'device1',
                    'turn_off'
                ]
            },
            'enabled': True,
            'type': 'api-target',
            'schedule': {},
            'scheduled_rule': {
                'on': [
                    'device1',
                    'turn_on'
                ],
                'off': [
                    'device1',
                    'turn_off'
                ]
            },
            'nickname': 'Lights',
            'turned_on': False
        }
    }
}


config2_api_target_options = {
    "device1": {
        "device1": {
            "display": "Air Conditioner (api-target)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule"
            ]
        },
        "device2": {
            "display": "Lights (api-target)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule"
            ]
        },
        "sensor1": {
            "display": "Thermostat (si7021)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule"
            ]
        },
        "ir_key": {
            "display": "Ir Blaster",
            "options": [
                "whynter_ac"
            ],
            "keys": {
                "whynter_ac": [
                    "off",
                    "stop",
                    "start"
                ]
            }
        },
        "ignore": {
            "display": "Ignore action"
        }
    },
    "device2": {
        "device1": {
            "display": "Cabinet Lights (pwm)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule",
                "turn_on",
                "turn_off"
            ]
        },
        "device2": {
            "display": "Overhead Lights (tasmota-relay)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule",
                "turn_on",
                "turn_off"
            ]
        },
        "sensor1": {
            "display": "Motion Sensor (pir)",
            "options": [
                "enable",
                "disable",
                "enable_in",
                "disable_in",
                "set_rule",
                "reset_rule",
                "trigger_sensor"
            ]
        },
        "ignore": {
            "display": "Ignore action"
        }
    }
}


config2_ir_macros = {
    'macro1': [
        'samsung_tv power 500 1',
        'samsung_tv vol_up 15 10',
    ],
    'macro2': [
        'whynter_ac ON 0 1'
    ]
}


# Expected ir_get_existing_macros response for test config 2
config2_existing_macros = {
    'macro1': [
        'samsung_tv power 500 1',
        'samsung_tv vol_up 15 10',
    ],
    'macro2': [
        'whynter_ac ON 0 1'
    ]
}


# Expected get_status response for test config 3
config3_status = {
    'metadata': {
        'id': 'Test3',
        'floor': '1',
        'location': 'Inside cabinet under sink',
        'ir_blaster': False,
        "schedule_keywords": {
            "sunrise": "06:00",
            "sunset": "18:00"
        }
    },
    'sensors': {
        'sensor1': {
            'current_rule': 2,
            'default_rule': 2,
            'enabled': True,
            'type': 'pir',
            'targets': [
                'device1',
                'device2'
            ],
            'schedule': {
                '10:00': '2',
                '22:00': '2'
            },
            'scheduled_rule': 2,
            'nickname': 'Motion Sensor (Bath)',
            'condition_met': True
        },
        'sensor2': {
            'current_rule': 1,
            'default_rule': 1,
            'enabled': True,
            'type': 'pir',
            'targets': [
                'device3'
            ],
            'schedule': {
                '00:00': '1'
            },
            'scheduled_rule': 1,
            'nickname': 'Motion Sensor (Entry)',
            'condition_met': False
        }
    },
    'devices': {
        'device1': {
            'current_rule': 256,
            'default_rule': 1023,
            'enabled': True,
            'type': 'pwm',
            'schedule': {
                '00:00': 'fade/32/7200',
                '05:00': 'Disabled',
                '22:01': 'fade/256/7140',
                '22:00': '1023'
            },
            'scheduled_rule': 256,
            'nickname': 'Bathroom LEDs',
            'turned_on': True,
            'max_rule': 1023,
            'min_rule': 0
        },
        'device3': {
            'current_rule': 'disabled',
            'default_rule': 'enabled',
            'enabled': False,
            'type': 'tasmota-relay',
            'schedule': {
                '05:00': 'enabled',
                '23:00': 'disabled'
            },
            'scheduled_rule': 'disabled',
            'nickname': 'Entry Light',
            'turned_on': False
        },
        'device2': {
            'current_rule': 'disabled',
            'default_rule': 'disabled',
            'enabled': False,
            'type': 'tasmota-relay',
            'schedule': {
                '05:00': 'enabled',
                '22:00': 'disabled'
            },
            'scheduled_rule': 'disabled',
            'nickname': 'Bathroom Lights',
            'turned_on': True
        }
    }
}
